secrets = [
    "DOCKER_USER",
    "DOCKER_PASS",
    "S3_BUCKET=codesink-cache",
    "S3_ENDPOINT=sfo2.digitaloceanspaces.com",
    "S3_ENABLED=true",
    "S3_ACCESS_KEY=",
    "S3_SECRET_KEY=",
    "GITHUB_TOKEN="
]

env = [
    "VAULT_ADDR=https://vault.codesink.io/",
    "VAULT_TOKEN",
    "ENGINE=docker"
]

kubernetes {
    namespace = "prow-tests"
}

engine = "${env.ENGINE}"

vault {
    address = "${env.VAULT_ADDR}"
    token = "${env.VAULT_TOKEN}"
}

cache {
    s3 {
        access_key = "${secrets.S3_ACCESS_KEY}"
        secret_key = "${secrets.S3_SECRET_KEY}"
        endpoint = "${secrets.S3_ENDPOINT}"
        bucket = "${secrets.S3_BUCKET}"
        disabled = "${secrets.S3_ENABLED != "true"}"
    }
}

repository {
    token = "${secrets.GITHUB_TOKEN}"
}

template "default" {
    image = "golang:1.12.5@sha256:5bc207d20bd9e97c57dc2ad013f2b02d982cc6e411d48bdc79d90bb601696650"

    env = {
        "GO111MODULE" = "on"
        "GOCACHE" = "/build/.gocache"
        "GOPATH" = "/build/.go"
        "GOBIN" = "/build/bin/"
    }

    inputs = ["./pkg/**/*.go", "./cmd/fluxcloud.go", "go.mod", "go.sum"]
}

template "docker" {
    deps = ["build"]

    image = "justinbarrick/kaniko@sha256:0ad4f7d68af728f4482ba7b12b013036f73370347c9989844319b22e2f5114d7"

    env = {
        "DOCKER_USER" = "${secrets.DOCKER_USER}",
        "DOCKER_PASS" = "${secrets.DOCKER_PASS}",
    }

    inputs = ["Dockerfile", "./fluxcloud"]
    shell = "kaniko --dockerfile=Dockerfile --context=/build/ --destination=${secrets.DOCKER_USER}/fluxcloud:$TAG"
}

job "lint" {
    shell = "test -z $(gofmt -l ./cmd ./pkg/)"
}

job "test" {
    deps = ["lint"]
    shell = "go test ./..."
}

job "build" {
    deps = ["test"]

    outputs = ["./fluxcloud"]

    env = {
        "CGO_ENABLED" = "0"
        "GOOS" = "linux"
    }

    shell = "go build -ldflags '-w -extldflags -static' -o ./fluxcloud ./cmd/"
}

job "docker" {
    template = "docker"

    env = {
        "TAG" = "${env.GIT_BRANCH}-${env.GIT_COMMIT_SHORT}"
    }
}

job "docker-release" {
    template = "docker"

    env = {
        "TAG" = "${env.GIT_TAG}"
    }

    condition = "GIT_BRANCH='master' and GIT_TAG!=''"
}


job "all" {
    deps = ["build", "docker", "docker-release"]
    shell = "echo all"
    engine = "local"
}
